name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run format -- --check
      
    - name: Build project
      run: npm run build
      
    - name: Test build artifacts
      run: |
        # Check if build outputs exist
        test -d packages/client/dist
        test -d packages/server/dist
        test -d packages/shared/dist
        
        # Check if main files exist
        test -f packages/client/dist/index.html
        test -f packages/server/dist/index.js
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-node-${{ matrix.node-version }}
        path: |
          packages/*/dist/
        retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for known vulnerabilities
      run: |
        # Check for high/critical vulnerabilities
        npm audit --audit-level=high || true
        
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to preview
      run: |
        echo "Preview deployment would go here"
        echo "PR #${{ github.event.number }} ready for review"
        
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Create release archive
      run: |
        tar -czf dnd-map-maker-${{ github.sha }}.tar.gz \
          packages/*/dist/ \
          package.json \
          README.md \
          LICENSE \
          CONTRIBUTING.md \
          SECURITY.md
          
    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: dnd-map-maker-${{ github.sha }}.tar.gz
        retention-days: 30
